/*
 * Copyright (c) Contributors to the Open 3D Engine Project.
 * For complete copyright and license terms please see the LICENSE at the root of this distribution.
 *
 * SPDX-License-Identifier: Apache-2.0 OR MIT
 *
 */

#ifndef MULTIVIEW
#define MULTIVIEW 0
#endif

#include <Atom/Features/SrgSemantics.azsli>

#include <Atom/Features/PostProcessing/FullscreenPixelInfo.azsli>
#include <Atom/Features/PostProcessing/FullscreenVertex.azsli>
#include <Atom/Features/PostProcessing/PostProcessUtil.azsli>

#include <Atom/Features/ColorManagement/TransformColor.azsli>

////////////////////////////////////////////////////////////////////////////////

ShaderResourceGroup PassSrg : SRG_PerPass
{
#if MULTIVIEW
    Texture2DArray<float4> m_framebuffer;
#else
    Texture2D<float4> m_framebuffer;
#endif
    Sampler LinearSampler
    {
        MinFilter = Linear;
        MagFilter = Linear;
        MipFilter = Linear;
        AddressU = Clamp;
        AddressV = Clamp;
        AddressW = Clamp;
    };
}

////////////////////////////////////////////////////////////////////////////////
// A entry point of pixel shader.
#if MULTIVIEW
PSOutput MainPS(VSOutput IN, uint viewIndex : SV_ViewID)
#else
PSOutput MainPS(VSOutput IN)
#endif
{
    PSOutput OUT;

#if MULTIVIEW
    float3 color = PassSrg::m_framebuffer.Sample(PassSrg::LinearSampler, float3(IN.m_texCoord, viewIndex)).rgb;
#else
    float3 color = PassSrg::m_framebuffer.Sample(PassSrg::LinearSampler, IN.m_texCoord).rgb;
#endif
    OUT.m_color.rgb = TransformColor(color, ColorSpaceId::ACEScg, ColorSpaceId::SRGB);
    OUT.m_color.w = 1;

    return OUT;
}
